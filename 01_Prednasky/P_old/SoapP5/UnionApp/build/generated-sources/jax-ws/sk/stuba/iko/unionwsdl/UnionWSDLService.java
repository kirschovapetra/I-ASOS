
package sk.stuba.iko.unionwsdl;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "UnionWSDLService", targetNamespace = "http://iko.stuba.sk/UnionWSDL", wsdlLocation = "file:/media/sf_WORK/ASOS/2020/Soap/UnionApp/src/conf/xml-resources/web-services/UnionServiceFromWSDL/wsdl/UnionWSDL.wsdl")
public class UnionWSDLService
    extends Service
{

    private final static URL UNIONWSDLSERVICE_WSDL_LOCATION;
    private final static WebServiceException UNIONWSDLSERVICE_EXCEPTION;
    private final static QName UNIONWSDLSERVICE_QNAME = new QName("http://iko.stuba.sk/UnionWSDL", "UnionWSDLService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/media/sf_WORK/ASOS/2020/Soap/UnionApp/src/conf/xml-resources/web-services/UnionServiceFromWSDL/wsdl/UnionWSDL.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        UNIONWSDLSERVICE_WSDL_LOCATION = url;
        UNIONWSDLSERVICE_EXCEPTION = e;
    }

    public UnionWSDLService() {
        super(__getWsdlLocation(), UNIONWSDLSERVICE_QNAME);
    }

    public UnionWSDLService(WebServiceFeature... features) {
        super(__getWsdlLocation(), UNIONWSDLSERVICE_QNAME, features);
    }

    public UnionWSDLService(URL wsdlLocation) {
        super(wsdlLocation, UNIONWSDLSERVICE_QNAME);
    }

    public UnionWSDLService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, UNIONWSDLSERVICE_QNAME, features);
    }

    public UnionWSDLService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public UnionWSDLService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns UnionWSDLPortType
     */
    @WebEndpoint(name = "UnionWSDLPort")
    public UnionWSDLPortType getUnionWSDLPort() {
        return super.getPort(new QName("http://iko.stuba.sk/UnionWSDL", "UnionWSDLPort"), UnionWSDLPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns UnionWSDLPortType
     */
    @WebEndpoint(name = "UnionWSDLPort")
    public UnionWSDLPortType getUnionWSDLPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://iko.stuba.sk/UnionWSDL", "UnionWSDLPort"), UnionWSDLPortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (UNIONWSDLSERVICE_EXCEPTION!= null) {
            throw UNIONWSDLSERVICE_EXCEPTION;
        }
        return UNIONWSDLSERVICE_WSDL_LOCATION;
    }

}
