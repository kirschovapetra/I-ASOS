<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"

       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
          http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
">
    
    <bean id="service" class="com.mycompany.virtualka_test.MessageServiceMock"/>
    <bean id="consumer" class="com.mycompany.virtualka_test.MessageConsumerMock"/>
    <bean id="processor" class="com.mycompany.virtualka_test.MessageProcessor" autowire="byType">
<!--        <constructor-arg ref="service"/>
        <constructor-arg name="consumer" ref="consumer"/>-->
    </bean>
    
    <bean id="aspectBean" class="com.mycompany.virtualka_test.MyAspect">
        <property name="count" value="0"/>
        <property name="sum" value="0"/>
    </bean>
    
    <aop:config>
        <aop:aspect id="ass" ref="aspectBean">
            <aop:pointcut id="logAllBefore" expression="execution(* com.mycompany.virtualka_test.*.*(..))"/>
            <aop:pointcut id="logGetMessage" expression="execution(* com.mycompany.virtualka_test.*.getMessage(..))"/>
            <aop:pointcut id="logPutMessage" expression="execution(* com.mycompany.virtualka_test.*.putMessage(..))"/>
            <aop:pointcut id="zacinaNaP" expression="execution(* com.mycompany.virtualka_test.*.p*(..))"/>
            
<!--            <aop:before method="before" pointcut-ref="logAllBefore"/>
            <aop:after method="after" pointcut-ref="logAllBefore"/>-->
            
            <!--<aop:before method="countBefore" pointcut-ref="logGetMessage"/>-->
            <aop:before method="before" pointcut-ref="zacinaNaP"/>
            <aop:after-returning method="sumAfter" pointcut-ref="logGetMessage" returning="ret"/>
            <aop:around method="encryptAround" pointcut-ref="logGetMessage"/>
            <aop:around method="decryptAround" pointcut-ref="logPutMessage"/>
            <aop:around method="merajCasAround" pointcut-ref="logGetMessage"/>
        </aop:aspect>
    </aop:config>
    
</beans>
